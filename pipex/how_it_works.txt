	parse arguments - acces to infile
	find command #1
		
	if not found -
		free everything and exit (with proper number of error)
	if found - 
	(i haven't freed 2 vars - short cmd and correct ppth_line)
		***changed***
			1. initialize all commands
			2. create all pipes between all commands
			3. execute all commands and close all connections between commands
			4. close all pipes 
		create a child process "fork()"	
		redirect the stdout/stdin "dup2()"
		close and free everything
		execute the command "execve()"
			if execve() successfully done - it exits automaticly and returns (0)
				the child process also exits automaticly in line with execve()
			else - there is an error - execve() quits and returns status.
				child process continues and execute next lines of code

		
	
	close fd-s in child process
	same command 2
	close fd-s in parent process
	wait command (2, 1)


	*** for bonus ***
		create while loop which i'll call from main function
		if this loop:
			find_command()
			execute_cmd() with a counter!
				because of this counter i'll be able to execute mny commands
				and manage in wich cmd dup2(fd[1], stdout) or dup2(fd[0], stdin)
				i guess 
		create a child process "fork()"	
		redirect the stdout/stdin "dup2()"
		close and free everything
		execute the command "execve()"

		counter = 2;
		while(counter < ac - 1)
		{
			if (counter % 2 == 0)
				inout = 'o';
			else
				inout = 'i';
			if (!main_process(av[counter], envp))
				return (0);
			counter++;
		}